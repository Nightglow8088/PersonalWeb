#spring.application.name=backend
spring:
  datasource:
    url: jdbc:postgresql://personalweb.cvo460mm2fia.us-west-1.rds.amazonaws.com:5432/postgres
#    url: jdbc:postgresql://localhost:5432/postgres
#    username: kevin
    username: Nightglow
    password: Aa35636752*
    driver-class-name: org.postgresql.Driver
  config:
    import: optional:dotenv
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        show_sql: true
        format_sql: true
    hibernate:
      ddl-auto: update
    show-sql: true
#    旧时代的残党 byd不提供服务了草
#  mail:、
#    host: smtp.office365.com
#    port: 587
#    username: mn961132@outlook.com
#    password: Aa35636752*
#    properties:
#      mail:
#        smtp:
#          auth: true
#          starttls:
#            enable: true
  # —— 新增：Spring Security OAuth2 Client 配置 ——
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID:dummy-client-id}
            client-secret: ${GOOGLE_CLIENT_SECRET:dummy-secret}
            client-name: Google
            # Spring Boot 默认的重定向 URI 模板，无需额外 controller
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope:
              - openid
              - profile
              - email
        provider:
          google:
            issuer-uri: https://accounts.google.com

gmail:
  client-id: ${GOOGLE_CLIENT_ID:dummy-client-id}
  client-secret: ${GOOGLE_CLIENT_SECRET:dummy-secret}
  refresh-token: ${GOOGLE_GMAIL_REFRESH_TOKEN:dummy-refresh-token}
  user-email: mbo@usc.edu

app:
  base-url: ${:http://localhost:8080}

jwt:
  secret: r6LZkm4iTlmgEPCjtT0ocMHIi5OeDPG5mE9Gp+uZ9O0J6RFKXtB2x7H8hdnYWUPsk5BxPqCvP0b9R1cOP0kW+A==
  expiration: 86400000 # 1 day in milliseconds






